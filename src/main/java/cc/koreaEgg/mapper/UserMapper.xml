<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cc.koreaEgg.mapper.UserMapper">

    <!-- USER TABLE -->
    <select id="selectUserByName" resultType="User">
        SELECT
          if( IFNULL(currentRole,'USER') = u.base_role , u.base_role, currentRole ) AS role,
          expired AS expire_date,
          if( IFNULL(currentRole,'USER') = u.base_role , 0, 1 ) AS role_change,
          u.*, r.role
          FROM USER u left join
            (
            SELECT *, if(expire_date &lt; now(), 'USER' , role ) AS currentRole,
            if(expire_date > now(), expire_date , null ) AS expired
            FROM USER_ROLE_REQ WHERE status=29 AND id in (select max(id) from USER_ROLE_REQ group by user_id)
            ) r on u.id = r.user_id
        WHERE u.status = 1 AND u.user_name LIKE CONCAT('%',#{userName},'%')
    </select>


    <select id="selectUserByUserId" parameterType="map" resultType="user">
        SELECT
          if( IFNULL(currentRole,'USER') = u.base_role , u.base_role, currentRole ) AS role,
          expired AS expire_date,
          if( IFNULL(currentRole,'USER') = u.base_role , 0, 1 ) AS role_change,
          u.*, r.role
          FROM USER u left join
            (
            SELECT *, if(expire_date &lt; now(), 'USER' , role ) AS currentRole,
            if(expire_date > now(), expire_date , null ) AS expired
            FROM USER_ROLE_REQ WHERE status=29 AND id in (select max(id) from USER_ROLE_REQ group by user_id)
            ) r on u.id = r.user_id
        WHERE u.status = 1 AND u.user_id = #{userId}
    </select>

    <select id="selectRoleChangeList" resultType="User">
        SELECT
        if( IFNULL(currentRole,'USER') = u.base_role , u.base_role, currentRole ) AS role,
        expired AS expire_date,
        if( IFNULL(currentRole,'USER') = u.base_role , 0, 1 ) AS role_change,
        u.*, r.role
        FROM USER u left join
        (
        SELECT *, if(expire_date &lt; now(), 'USER' , role ) AS currentRole,
        if(expire_date > now(), expire_date , null ) AS expired
        FROM USER_ROLE_REQ WHERE status=29 AND id in (select max(id) from USER_ROLE_REQ group by user_id)
        ) r on u.id = r.user_id
        WHERE u.status = 1 AND IFNULL(currentRole,'USER') &lt;&gt; u.base_role
    </select>


    <!--유저 전체 검색-->
    <select id="selectAllUser" parameterType="map" resultType="User">
        SELECT
        if( IFNULL(currentRole,'USER') = u.base_role , u.base_role, currentRole ) AS role,
        expired AS expire_date,
        if( IFNULL(currentRole,'USER') = u.base_role , 0, 1 ) AS role_change,
        u.*, r.role
        FROM USER u left join
        (
        SELECT *, if(expire_date &lt; now(), 'USER' , role ) AS currentRole,
        if(expire_date > now(), expire_date , null ) AS expired
        FROM USER_ROLE_REQ WHERE status=29 AND id in (select max(id) from USER_ROLE_REQ group by user_id)
        ) r on u.id = r.user_id
        WHERE u.status = 1
        <if test="userId!=null and !userId.equals('')">
            AND u.user_id LIKE CONCAT('%',#{userId},'%')
        </if>
        <if test="userName!=null and !userName.equals('')">
            AND u.user_name LIKE CONCAT('%',#{userName},'%')
        </if>
        <if test="mobile!=null and !mobile.equals('')">
            AND u.mobile LIKE CONCAT('%',#{mobile},'%')
        </if>
        <if test="shopName!=null and !shopName.equals('')">
            AND u.shop_name LIKE CONCAT('%',#{shopName},'%')
        </if>
        <if test="address!=null and !address.equals('')">
            AND u.address LIKE CONCAT('%',#{address},'%')
        </if>
        <if test="role!=null and !role.equals('')">
            AND u.base_role = #{role}
        </if>
        ORDER BY id desc
        LIMIT #{cri.pageStart}, #{cri.perPageNum}
    </select>

    <select id="selectCountAllUser" parameterType="map" resultType="int">
        SELECT count(*)
        FROM USER
        WHERE status = 1
        <if test="userId!=null and !userId.equals('')">
            AND user_id LIKE CONCAT('%',#{userId},'%')
        </if>
        <if test="userName!=null and !userName.equals('')">
            AND user_name LIKE CONCAT('%',#{userName},'%')
        </if>
        <if test="mobile!=null and !mobile.equals('')">
            AND mobile LIKE CONCAT('%',#{mobile},'%')
        </if>
        <if test="shopName!=null and !shopName.equals('')">
            AND shop_name LIKE CONCAT('%',#{shopName},'%')
        </if>
        <if test="address!=null and !address.equals('')">
            AND address LIKE CONCAT('%',#{address},'%')
        </if>
        <if test="role!=null and !role.equals('')">
            AND base_role = #{role}
        </if>
    </select>

    <!--TODO AN 유저등록 UserServiceTest 테스트 만들어놈-->
    <insert id="createUser" parameterType="User">
      INSERT INTO USER (user_id, user_name, pwd, mobile, shop_id, reg_date)
      VALUES (#{userId},#{userName},#{pwd},#{mobile},#{shopId},NOW())
    </insert>

    <select id="selectUserById" parameterType="long" resultType="user">
      SELECT * FROM USER WHERE id = #{id}
    </select>

      <!--TODO AN 비밀번호 찾기용-->
    <update id="updateUserPwd">
        UPDATE USER
        SET pwd = #{pwd}
        WHERE id = #{id}
    </update>

    <update id="updateUser" parameterType="User">
        UPDATE USER
        SET base_role = #{baseRole}
        , status = #{status}
        , user_name = #{userName}
        , pwd = #{pwd}
        , mobile = #{mobile}
        , shop_id = #{shopId}
        , update_date = NOW()
        WHERE id = #{id}
    </update>

    <update id="updateUserRole">
        UPDATE USER
        SET base_role = #{role}
        WHERE id = #{id}
    </update>

    <update id="countUpVisit" parameterType="long">
        UPDATE USER
        SET login_count = login_count+1
        WHERE id = #{id}
    </update>

    <!--TODO AN 유저탈퇴 개인정보만 지우고 status값만 off로 변경?-->
    <update id="deleteUser" parameterType="long">
        UPDATE USER
        SET status = 9
        WHERE id = #{id}
    </update>

    <!-- USER ROLE REQ TABLE -->
    <insert id="createUserRoleReq" parameterType="userRoleReq">
        INSERT INTO USER_ROLE_REQ (user_id, status, role, req_name, deposit, memo,update_date,expire_date, reg_date)
        VALUES (#{userId},#{status},#{role},#{reqName},#{deposit}, #{memo}, #{updateDate}, #{expireDate}, NOW())
    </insert>

    <select id="selectAllUserRoleReqList" parameterType="map" resultType="userRoleReq">
        /*TODO AN 전체 히스토리 가져오기*/
        SELECT * FROM USER_ROLE_REQ
        WHERE 1=1
        <if test="userId neq null">
            AND user_id = #{userId}
        </if>
        <if test="status neq null">
            AND status = #{status}
        </if>
        <if test="reqName neq null">
            AND req_name like concat('%',#{userId},'%')
        </if>
        <if test="startDate neq null">
            AND reg_date &gt;= #{startDate}
        </if>
        <if test="endDate neq null">
            AND reg_date &lt;= #{endDate}
        </if>
        order by id desc
        LIMIT #{cri.pageStart}, #{cri.perPageNum}
    </select>

    <select id="selectCountAllUserRoleReqList" parameterType="map" resultType="int">
        /*TODO AN 전체 히스토리 가져오기*/
        SELECT COUNT(*) FROM USER_ROLE_REQ
        WHERE 1=1
        <if test="userId neq null">
            AND user_id = #{userId}
        </if>
        <if test="status neq null">
            AND status = #{status}
        </if>
        <if test="reqName neq null">
            AND req_name like concat('%',#{userId},'%')
        </if>
        <if test="startDate neq null">
            AND reg_date &gt;= #{startDate}
        </if>
        <if test="endDate neq null">
            AND reg_date &lt;= #{endDate}
        </if>
    </select>

    <update id="updateUserRoleReq">
        UPDATE USER_ROLE_REQ
        SET status = #{status}
        , role = #{role}
        , deposit = #{deposit}
        , req_name = #{reqName}
        , memo = #{memo}
        , update_date = NOW()
        , expire_date = #{expireDate}
        WHERE id = #{id}
    </update>
    <!--, expire_date = DATE_ADD(NOW(),INTERVAL 1,YEAR)-->
    
    <select id="selectUserRoleExp">
        /* TODO AN 한달이내에 만료되는 계정확인 관리자 확인용*/
    </select>

    <select id="selectUserRoleExpMonth">
        /* TODO AN 한달뒤에 만료되는 계정확인 매일 10시쯤 스케쥴 돌려서 문자보낼예정?*/
    </select>

    <!-- 현재기준 유저롤 조회 -->
    <select id="selectCurrentUserRole" parameterType="map" resultType="role">
        select role from USER_ROLE_REQ where user_id = #{userId} and expire_date &lt;  now() order by id desc  limit 1
    </select>





</mapper>